Creating a Dockerfile
A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. 
Docker can build images automatically by reading the instructions from a Dockerfile.

We created a Dockerfile by creating a empty text file and renaming it to Dockerfile and then entering the following code in it.

# Use the official Node.js image as the base image
FROM node:16

# Set the working directory inside the container
WORKDIR /usr/src/app

# Copy package.json and package-lock.json to the working directory
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code to the working directory
COPY . .

# Expose the port the app runs on
EXPOSE 3040

# Command to run the application
CMD ["node", "server.js"]

We then built a docker image by using the command "$ docker build -t yourusername/example-node-app."

we created a compose docker file
Docker Compose is a tool that helps you define and share multi-container applications. 
With Compose, we can create a YAML file to define the services and with a single command, 
you can spin everything up or tear it all down

we push the socker image to registry for safekeeping, ready for deployment

We made multiple networks in docker compose because it teaches us how to isolate services running in different containers. 
By organising containers into networks we can reduce the complexity of network configurations and better performance, reducing the network congestion.
